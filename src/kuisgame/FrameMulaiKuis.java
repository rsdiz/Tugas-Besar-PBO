/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package kuisgame;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.Timer;

/**
 *
 * @author Rosyid Iz
 */
public final class FrameMulaiKuis extends javax.swing.JFrame {
    String soal, player;
    String A, B, C, D;
    private int urutan = 1;
    String jawaban;
    int score = 0;
    /**
     * Creates new form FrameMulaiKuis
     */
    public FrameMulaiKuis() {
        initComponents();
        getNamePlayer();
        tampilSoal();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    
    void getNamePlayer() {
        try {
            // Membuat Koneksi
            Connection conn = ConnectDB.getKoneksi();
            Statement s = conn.createStatement();
            // Membuat Query SELECT
            String sql = "SELECT nama FROM user ORDER BY id DESC LIMIT 1";
            
            ResultSet r = s.executeQuery(sql);
            while(r.next()){
                labelPlayer.setText(r.getString("nama"));
            }

        } catch(SQLException e) {
            System.out.println("Terjadi Error! Gagal mengambil nama");
        }
    }
    
    void setScore(int score) {
        try {
            // Membuat Koneksi
            Connection conn = ConnectDB.getKoneksi();
            Statement s = conn.createStatement();
            // Membuat Query SELECT
            String sql = "UPDATE user SET score = ? ORDER BY id DESC LIMIT 1";
//            s.executeQuery(sql);
            PreparedStatement p = conn.prepareStatement(sql);
            p.setInt(1, score);
            p.executeUpdate();
            p.close();
            
        } catch(SQLException e) {
            System.out.println("Terjadi Error! Nama tidak tersimpan");
        }
    }
    
    private void toEnd(){
        if( this.urutan > getBatas() ) {
            setScore(score);
            this.setVisible(false);
            FrameSelesai end = new FrameSelesai();
            this.dispose();
            end.setVisible(true);
        }
    }
    
    private int getBatas(){
        int jmlSoal = 0;
        try {
            // Membuat Koneksi
            Connection conn = ConnectDB.getKoneksi();
            Statement s = conn.createStatement();
            // Membuat Query SELECT
            String sql = "SELECT COUNT(*) AS jumlah FROM soal";
            
            ResultSet r = s.executeQuery(sql);
            while(r.next()){
                jmlSoal = r.getInt("jumlah");
            }

            
        } catch(SQLException e) {
            System.out.println("Terjadi Error!");
        }
        
        return jmlSoal;
    }
    
    boolean getJawaban(String jawabanUser){
        String benar = "";
        try {
            // Membuat Koneksi
            Connection conn = ConnectDB.getKoneksi();
            Statement s = conn.createStatement();
            // Membuat Query SELECT
            String sql = "SELECT * FROM soal WHERE soal.id_soal = " + urutan ;
            
            ResultSet r = s.executeQuery(sql);
            while(r.next()){
                benar = r.getString("jawaban");
            }

            
        } catch(SQLException e) {
            System.out.println("Terjadi Error!");
        }
        System.out.println(jawabanUser);
//        return jawabanUser == benar;
        return jawabanUser.equals(benar);
    }
    
    void tampilSoal(){
        try {
            // Membuat Koneksi
            Connection conn = ConnectDB.getKoneksi();
            Statement s = conn.createStatement();
            // Membuat Query SELECT
            String sql = "SELECT * FROM soal INNER JOIN jawaban ON soal.id_soal = jawaban.id_soal WHERE soal.id_soal = " + urutan ;
            
            ResultSet r = s.executeQuery(sql);
            
            while(r.next()){
                soal = r.getString("soal");
                A = r.getString("jawaban_a");
                B = r.getString("jawaban_b");
                C = r.getString("jawaban_c");
                D = r.getString("jawaban_d");
            }
            // Membuat data di dalam database baris per baris
            jLabel3.setText(soal);
            buttonA.setText(A);
            buttonB.setText(B);
            buttonC.setText(C);
            buttonD.setText(D);
            
        } catch(SQLException e) {
            System.out.println("Terjadi Error!");
        }
        
    }
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        labelPlayer = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        closePanel = new javax.swing.JPanel();
        X = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel1 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        buttonC = new javax.swing.JButton();
        buttonA = new javax.swing.JButton();
        buttonB = new javax.swing.JButton();
        buttonD = new javax.swing.JButton();
        jProgressBar1 = new javax.swing.JProgressBar();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setLocationByPlatform(true);
        setMaximumSize(new java.awt.Dimension(800, 500));
        setMinimumSize(new java.awt.Dimension(800, 500));
        setUndecorated(true);
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(111, 90, 126));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setFont(new java.awt.Font("THE CHAMP", 0, 24)); // NOI18N
        jLabel2.setText("00:00");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 290, 90, -1));

        labelPlayer.setFont(new java.awt.Font("THE CHAMP", 0, 18)); // NOI18N
        labelPlayer.setForeground(new java.awt.Color(255, 255, 255));
        labelPlayer.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelPlayer.setText("nama");
        jPanel1.add(labelPlayer, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 60, 120, 40));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 140, 500));

        jPanel2.setBackground(new java.awt.Color(252, 246, 246));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        closePanel.setBackground(new java.awt.Color(205, 102, 132));
        closePanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                closePanelMouseClicked(evt);
            }
        });

        X.setFont(new java.awt.Font("THE CHAMP", 0, 24)); // NOI18N
        X.setForeground(new java.awt.Color(255, 255, 255));
        X.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        X.setText("X");
        closePanel.add(X);

        jPanel2.add(closePanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 10, 30, 30));
        jPanel2.add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 50, 660, -1));

        jLabel1.setFont(new java.awt.Font("THE CHAMP", 0, 22)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(205, 102, 132));
        jLabel1.setText("KUIS");
        jPanel2.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, 90, 40));

        jPanel3.setBackground(new java.awt.Color(205, 102, 132));
        jPanel3.setBorder(javax.swing.BorderFactory.createEmptyBorder(25, 25, 25, 25));
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel3.setFont(new java.awt.Font("Montserrat", 0, 14)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                jLabel3AncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        jPanel3.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 30, 560, 170));

        jPanel2.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 110, 620, 230));

        buttonC.setBackground(new java.awt.Color(205, 102, 132));
        buttonC.setFont(new java.awt.Font("Source Sans Pro", 0, 14)); // NOI18N
        buttonC.setForeground(new java.awt.Color(51, 51, 51));
        buttonC.setText("JAWABAN 2");
        buttonC.setBorder(null);
        buttonC.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                buttonCMouseClicked(evt);
            }
        });
        jPanel2.add(buttonC, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 360, 290, 50));

        buttonA.setBackground(new java.awt.Color(205, 102, 132));
        buttonA.setFont(new java.awt.Font("Source Sans Pro", 0, 14)); // NOI18N
        buttonA.setForeground(new java.awt.Color(51, 51, 51));
        buttonA.setText("JAWABAN 1");
        buttonA.setBorder(null);
        buttonA.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                buttonAMouseClicked(evt);
            }
        });
        jPanel2.add(buttonA, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 360, 290, 50));

        buttonB.setBackground(new java.awt.Color(205, 102, 132));
        buttonB.setFont(new java.awt.Font("Source Sans Pro", 0, 14)); // NOI18N
        buttonB.setForeground(new java.awt.Color(51, 51, 51));
        buttonB.setText("JAWABAN 3");
        buttonB.setBorder(null);
        buttonB.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                buttonBMouseClicked(evt);
            }
        });
        jPanel2.add(buttonB, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 430, 290, 50));

        buttonD.setBackground(new java.awt.Color(205, 102, 132));
        buttonD.setFont(new java.awt.Font("Source Sans Pro", 0, 14)); // NOI18N
        buttonD.setForeground(new java.awt.Color(51, 51, 51));
        buttonD.setText("JAWABAN 4");
        buttonD.setBorder(null);
        buttonD.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                buttonDMouseClicked(evt);
            }
        });
        jPanel2.add(buttonD, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 430, 290, 50));

        jProgressBar1.setForeground(new java.awt.Color(51, 255, 0));
        jProgressBar1.setMaximum(60);
        jProgressBar1.setToolTipText("");
        jProgressBar1.setValue(60);
        jProgressBar1.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                jProgressBar1AncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        jPanel2.add(jProgressBar1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 70, 620, 30));

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 0, 660, 500));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void closePanelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_closePanelMouseClicked
        this.dispose();
    }//GEN-LAST:event_closePanelMouseClicked

    private void jLabel3AncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_jLabel3AncestorAdded
        
    }//GEN-LAST:event_jLabel3AncestorAdded

    private void buttonAMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonAMouseClicked
        jawaban = "A";
        if(getJawaban(jawaban)){
            this.score += 10;
        }
        
        this.urutan++;
        
        toEnd();
        
        tampilSoal();
        
       
    }//GEN-LAST:event_buttonAMouseClicked

    private void buttonCMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonCMouseClicked
        jawaban = "C";
        if(getJawaban(jawaban)){
            this.score += 10;
        }
        this.urutan++;
        
        toEnd();
        
        tampilSoal();
    }//GEN-LAST:event_buttonCMouseClicked

    private void buttonBMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonBMouseClicked
        jawaban = "B";
        if(getJawaban(jawaban)){
            this.score += 10;
        }
        this.urutan++;
        
        toEnd();
        
        tampilSoal();
    }//GEN-LAST:event_buttonBMouseClicked

    private void buttonDMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonDMouseClicked
        jawaban = "D";
        if(getJawaban(jawaban)){
            this.score += 10;
        }
        this.urutan++;
        
        toEnd();
        
        tampilSoal();
    }//GEN-LAST:event_buttonDMouseClicked
    
    private void jProgressBar1AncestorAdded(javax.swing.event.AncestorEvent evt) {                                            
        
        jProgressBar1.setValue(100);
        
        ActionListener listener = new ActionListener() {
            int counter = 60;
            @Override
            public void actionPerformed(ActionEvent ae) {
                counter--;
                jProgressBar1.setValue(counter);
                if (counter<1) {
                    out = true;
                    timer.stop();
                    urutan = getBatas() + 1;
                    toEnd();
                }
            }
            
        };
        timer = new Timer(100, listener);
        timer.start();
    }    

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrameMulaiKuis.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrameMulaiKuis.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrameMulaiKuis.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrameMulaiKuis.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrameMulaiKuis().setVisible(true);
            }
        });
    }
    private Timer timer;
    private boolean out = false;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel X;
    private javax.swing.JButton buttonA;
    private javax.swing.JButton buttonB;
    private javax.swing.JButton buttonC;
    private javax.swing.JButton buttonD;
    private javax.swing.JPanel closePanel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JProgressBar jProgressBar1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel labelPlayer;
    // End of variables declaration//GEN-END:variables
}
